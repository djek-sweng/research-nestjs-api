{
	"info": {
		"_postman_id": "23cdb47c-ffd1-44bf-9900-2bc2e7e16f64",
		"name": "research-nestjs-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20996595"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "user Foo",
					"item": [
						{
							"name": "signup Foo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Content-Type header is: application/json; charset=utf-8', () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json; charset=utf-8');",
											"})",
											"",
											"pm.test('Status code is: 200', () => {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test('Cache authentication properties.', () => {",
											"    const res = pm.response.json();",
											"    pm.environment.unset('auth_access_token');",
											"    pm.environment.unset('auth_expires_in');",
											"    pm.environment.unset('auth_user_id');",
											"    pm.environment.set('auth_access_token', res.access_token);",
											"    pm.environment.set('auth_expires_in', res.expires_in);",
											"    pm.environment.set('auth_user_id', res.user_id);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Foo\",\n  \"email\": \"Foo@email.com\",\n  \"password\": \"pasSworD\",\n  \"confirmPassword\": \"pasSworD\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/auth/signup",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"auth",
										"signup"
									]
								}
							},
							"response": []
						},
						{
							"name": "signin Foo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Content-Type header is: application/json; charset=utf-8', () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json; charset=utf-8');",
											"})",
											"",
											"pm.test('Status code is: 200', () => {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test('Cache authentication properties.', () => {",
											"    const res = pm.response.json();",
											"    pm.environment.unset('auth_access_token');",
											"    pm.environment.unset('auth_expires_in');",
											"    pm.environment.unset('auth_user_id');",
											"    pm.environment.set('auth_access_token', res.access_token);",
											"    pm.environment.set('auth_expires_in', res.expires_in);",
											"    pm.environment.set('auth_user_id', res.user_id);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"Foo@email.com\",\n  \"password\": \"pasSworD\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/auth/signin",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"auth",
										"signin"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "user Bar",
					"item": [
						{
							"name": "signup Bar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Content-Type header is: application/json; charset=utf-8', () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json; charset=utf-8');",
											"})",
											"",
											"pm.test('Status code is: 200', () => {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test('Cache authentication properties.', () => {",
											"    const res = pm.response.json();",
											"    pm.environment.unset('auth_access_token');",
											"    pm.environment.unset('auth_expires_in');",
											"    pm.environment.unset('auth_user_id');",
											"    pm.environment.set('auth_access_token', res.access_token);",
											"    pm.environment.set('auth_expires_in', res.expires_in);",
											"    pm.environment.set('auth_user_id', res.user_id);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Bar\",\n  \"email\": \"Bar@email.com\",\n  \"password\": \"pasSworD\",\n  \"confirmPassword\": \"pasSworD\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/auth/signup",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"auth",
										"signup"
									]
								}
							},
							"response": []
						},
						{
							"name": "signin Bar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Content-Type header is: application/json; charset=utf-8', () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json; charset=utf-8');",
											"})",
											"",
											"pm.test('Status code is: 200', () => {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test('Cache authentication properties.', () => {",
											"    const res = pm.response.json();",
											"    pm.environment.unset('auth_access_token');",
											"    pm.environment.unset('auth_expires_in');",
											"    pm.environment.unset('auth_user_id');",
											"    pm.environment.set('auth_access_token', res.access_token);",
											"    pm.environment.set('auth_expires_in', res.expires_in);",
											"    pm.environment.set('auth_user_id', res.user_id);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"Bar@email.com\",\n  \"password\": \"pasSworD\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/auth/signin",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"auth",
										"signin"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "get profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/users/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "update profile",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Alice\",\n  \"email\": \"Alice@email.com\",\n  \"status\": \"status updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/users/email",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"email"
							]
						}
					},
					"response": []
				},
				{
					"name": "get name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/users/name",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"name"
							]
						}
					},
					"response": []
				},
				{
					"name": "get status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/users/status",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"status"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{auth_access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "notes",
			"item": [
				{
					"name": "get notes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/notes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "get note by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/notes/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"notes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create note",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"test note\",\n  \"content\": \"test content\",\n  \"tag\": \"test tag\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/notes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "update note by id",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"updated test note\",\n  \"content\": \"updated test content\",\n  \"tag\": \"updated test tag\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/notes/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"notes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete note by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/notes/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"notes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{auth_access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}